{"ast":null,"code":"var _jsxFileName = \"/home/jetreck/codes/git/coding-session-5/coding-session-5/src/App.tsx\";\nimport React from 'react';\nimport { Header, Container, Segment, Input, Form, Button } from 'semantic-ui-react';\nimport './App.css';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCm60kMZo4ayzEOUTEIM_XjOmeilrWI_Rw\",\n  authDomain: \"simplechatapp-481e5.firebaseapp.com\",\n  databaseURL: \"https://simplechatapp-481e5.firebaseio.com\",\n  projectId: \"simplechatapp-481e5\",\n  storageBucket: \"simplechatapp-481e5.appspot.com\",\n  messagingSenderId: \"625311044714\",\n  appId: \"1:625311044714:web:8b6b429eefdb5adbc06613\"\n}; //Initialize Firebase \n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadedChatMessages: [{\n        author: 'Joe',\n        message: 'Hallo',\n        timestamp: Date.now()\n      }]\n    };\n  }\n\n  componentDidMount() {\n    db.collection(\"ChatMessages\").onSnapshot(query => {\n      const chatPostsDbDocs = query.docs;\n      const chatPosts = [];\n\n      for (let i = 0; i < chatPostsDbDocs.length; i++) {\n        const chatPost = chatPostsDbDocs[i].data();\n        chatPosts.push(chatPost);\n      }\n\n      this.setState({\n        loadedChatMessages: chatPosts\n      });\n    });\n  }\n\n  render() {\n    const chatMessageDivs = [];\n\n    for (let i = 0; i < this.state.loadedChatMessages.length; i++) {\n      const chatMessage = this.state.loadedChatMessages[i];\n      chatMessageDivs.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 28\n        }\n      }, chatMessage.message));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, this.props.headerText), /*#__PURE__*/React.createElement(Container, {\n      className: \"Chatcontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, chatMessageDivs, /*#__PURE__*/React.createElement(Segment, {\n      raised: true,\n      padded: true,\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Hallo bojolkasdf\", /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jetreck/codes/git/coding-session-5/coding-session-5/src/App.tsx"],"names":["React","Header","Container","Segment","Input","Form","Button","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","App","Component","state","loadedChatMessages","author","message","timestamp","Date","now","componentDidMount","collection","onSnapshot","query","chatPostsDbDocs","docs","chatPosts","i","length","chatPost","data","push","setState","render","chatMessageDivs","chatMessage","props","headerText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Header, Container, Segment, Input, Form, Button} from 'semantic-ui-react'\nimport './App.css';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\"; \n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCm60kMZo4ayzEOUTEIM_XjOmeilrWI_Rw\",\n  authDomain: \"simplechatapp-481e5.firebaseapp.com\",\n  databaseURL: \"https://simplechatapp-481e5.firebaseio.com\",\n  projectId: \"simplechatapp-481e5\",\n  storageBucket: \"simplechatapp-481e5.appspot.com\",\n  messagingSenderId: \"625311044714\",\n  appId: \"1:625311044714:web:8b6b429eefdb5adbc06613\"\n};\n\n//Initialize Firebase \nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\ninterface ChatMessage{\n  author: string;\n  message: string;\n  timestamp: number;\n}\n\ninterface AppProps {\n  headerText: string;\n}\n\ninterface AppState {\n  loadedChatMessages: Array<ChatMessage>\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  \n  state = {\n     loadedChatMessages: [{\n      author: 'Joe',\n      message: 'Hallo',\n      timestamp: Date.now(),\n    }]\n  } as AppState\n\n  componentDidMount(){\n   db.collection(\"ChatMessages\").onSnapshot((query) => {\n    const chatPostsDbDocs = query.docs;\n    const chatPosts: Array<ChatMessage> = [];\n    for (let i=0; i < chatPostsDbDocs.length; i++){\n      const chatPost = chatPostsDbDocs[i].data() as ChatMessage;\n      chatPosts.push(chatPost);\n    }\n\n    this.setState({\n      loadedChatMessages: chatPosts\n    })\n   }); \n  }\n  \n  render(){\n\n    const chatMessageDivs= [];\n    for (let i=0; i < this.state.loadedChatMessages.length; i++){\n      const chatMessage = this.state.loadedChatMessages[i];\n      chatMessageDivs.push(<div>{chatMessage.message}</div>);\n    }\n    return (\n      <div className=\"App\">\n        <Header color=\"blue\">{this.props.headerText}</Header>\n        <Container className=\"Chatcontainer\">\n          {chatMessageDivs}\n          <Segment raised={true} padded={true} textAlign=\"left\">\n            Hallo bojolkasdf\n            <Form>\n              <Input\n              />\n                <Button>Submit</Button>\n            </Form>\n          </Segment>\n          \n        </Container>\n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}